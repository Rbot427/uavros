<launch>
    <arg name="ns" default="false"/>
    <arg name="use_slam" default="true"/>

    <!-- Odometry -->
    <node name="hector_localization" pkg="hector_pose_estimation" type="pose_estimation">
        <remap from="state" to="ekf_state"/>
        <param name="with_covariances" value="false"/>
        <param name="system/gyro_stddev" value="0.1" />
        <param name="system/acceleration_stddev" value="1.0" />
        <param name="world_frame" value="map"/>
        <param name="nav_frame" value="odom"/>
        <param name="base_frame" value="body_frame"/>
    </node>

    <!-- SLAM -->
    <group if="$(arg use_slam)">
        <!-- common frame names regardless of namespacing -->
        <arg name="map_frame" value="map"/>
        <arg name="body_frame" value="body_frame"/>
        <arg name="odom_frame" value="odom_frame"/>

        <group if="$(arg ns)">
            <node name="hector_slam" pkg="hector_mapping" type="hector_mapping">
                <rosparam file="$(find uav_launch)/config/hector_slam.yaml" command="load"/>
                <remap from="poseupdate" to="slam_poseupdate"/>
                <param name="map_frame" value="hexacopter/$(arg map_frame)"/>
                <param name="base_frame" value="hexacopter/$(arg body_frame)"/>
                <param name="odom_frame" value="hexacopter/$(arg odom_frame)"/>
            </node>
        </group>
        <group unless="$(arg ns)">
            <node name="hector_slam" pkg="hector_mapping" type="hector_mapping">
                <rosparam file="$(find uav_launch)/config/hector_slam.yaml" command="load"/>
                <remap from="poseupdate" to="slam_poseupdate"/>
                <param name="map_frame" value="$(arg map_frame)"/>
                <param name="base_frame" value="$(arg body_frame)"/>
                <param name="odom_frame" value="$(arg odom_frame)"/>
            </node>
        </group>
    </group>

    <!-- State Aggregation -->
    <node name="uav_state_publisher"
            pkg="uav_state_publisher"
            type="uav_state_publisher"
            launch-prefix="nice --1" output="screen">
        <rosparam file="$(find uav_launch)/config/uav_state_publisher.yaml" command="load"/>
    </node>

    <!--
    <node pkg="tf" type="static_transform_publisher" name="map2slam_map_publisher" args="0 0 0 0 0 0 map slam_map 100" />
    -->
</launch>
